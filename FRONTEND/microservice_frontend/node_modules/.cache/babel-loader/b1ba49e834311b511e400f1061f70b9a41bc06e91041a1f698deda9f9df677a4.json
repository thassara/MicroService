{"ast":null,"code":"// src/apiRestaurant/orderApi.js\nimport axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8082'; // No trailing slash\n\nexport const getRestaurantOrders = async restaurantId => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/api/orders/restaurant/${restaurantId}/orders`,\n    // Added /orders\n    {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      withCredentials: true\n    });\n    return response.data;\n  } catch (error) {\n    console.error('API Error:', {\n      url: `${API_BASE_URL}/api/orders/restaurant/${restaurantId}/orders`,\n      error: error.response ? error.response.data : error.message\n    });\n    throw error;\n  }\n};\nexport const updateOrderStatus = async (orderId, status) => {\n  try {\n    let endpoint;\n    switch (status) {\n      case 'RESTAURANT_CONFIRMED':\n        endpoint = `${API_BASE_URL}/api/owner/restaurants/${orderId}/confirm`;\n        break;\n      case 'PREPARING':\n        endpoint = `${API_BASE_URL}/api/owner/restaurants/${orderId}/preparing`;\n        break;\n      case 'READY_FOR_PICKUP':\n        endpoint = `${API_BASE_URL}/api/owner/restaurants/${orderId}/ready`;\n        break;\n      case 'CANCELLED':\n        endpoint = `${API_BASE_URL}/api/owner/restaurants/${orderId}/cancel`;\n        break;\n      default:\n        throw new Error('Invalid status');\n    }\n    const response = await axios.put(endpoint, {}, {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      withCredentials: true\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    console.error('Update Status Error:', error);\n    throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to update order status');\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","getRestaurantOrders","restaurantId","response","get","headers","withCredentials","data","error","console","url","message","updateOrderStatus","orderId","status","endpoint","Error","put","_error$response","_error$response$data"],"sources":["D:/3year/microservice_frontend/src/apiRestaurant/orderApi.js"],"sourcesContent":["// src/apiRestaurant/orderApi.js\r\nimport axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:8082'; // No trailing slash\r\n\r\nexport const getRestaurantOrders = async (restaurantId) => {\r\n    try {\r\n        const response = await axios.get(\r\n            `${API_BASE_URL}/api/orders/restaurant/${restaurantId}/orders`, // Added /orders\r\n            {\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                withCredentials: true\r\n            }\r\n        );\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('API Error:', {\r\n            url: `${API_BASE_URL}/api/orders/restaurant/${restaurantId}/orders`,\r\n            error: error.response ? error.response.data : error.message\r\n        });\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const updateOrderStatus = async (orderId, status) => {\r\n    try {\r\n        let endpoint;\r\n        switch(status) {\r\n            case 'RESTAURANT_CONFIRMED':\r\n                endpoint = `${API_BASE_URL}/api/owner/restaurants/${orderId}/confirm`;\r\n                break;\r\n            case 'PREPARING':\r\n                endpoint = `${API_BASE_URL}/api/owner/restaurants/${orderId}/preparing`;\r\n                break;\r\n            case 'READY_FOR_PICKUP':\r\n                endpoint = `${API_BASE_URL}/api/owner/restaurants/${orderId}/ready`;\r\n                break;\r\n            case 'CANCELLED':\r\n                endpoint = `${API_BASE_URL}/api/owner/restaurants/${orderId}/cancel`;\r\n                break;\r\n            default:\r\n                throw new Error('Invalid status');\r\n        }\r\n\r\n        const response = await axios.put(\r\n            endpoint,\r\n            {},\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                withCredentials: true\r\n            }\r\n        );\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Update Status Error:', error);\r\n        throw new Error(error.response?.data?.message || 'Failed to update order status');\r\n    }\r\n};"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,uBAAuB,CAAC,CAAC;;AAE9C,OAAO,MAAMC,mBAAmB,GAAG,MAAOC,YAAY,IAAK;EACvD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAC5B,GAAGJ,YAAY,0BAA0BE,YAAY,SAAS;IAAE;IAChE;MACIG,OAAO,EAAE;QACL,QAAQ,EAAE,kBAAkB;QAC5B,cAAc,EAAE;MACpB,CAAC;MACDC,eAAe,EAAE;IACrB,CACJ,CAAC;IACD,OAAOH,QAAQ,CAACI,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAE;MACxBE,GAAG,EAAE,GAAGV,YAAY,0BAA0BE,YAAY,SAAS;MACnEM,KAAK,EAAEA,KAAK,CAACL,QAAQ,GAAGK,KAAK,CAACL,QAAQ,CAACI,IAAI,GAAGC,KAAK,CAACG;IACxD,CAAC,CAAC;IACF,MAAMH,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMI,iBAAiB,GAAG,MAAAA,CAAOC,OAAO,EAAEC,MAAM,KAAK;EACxD,IAAI;IACA,IAAIC,QAAQ;IACZ,QAAOD,MAAM;MACT,KAAK,sBAAsB;QACvBC,QAAQ,GAAG,GAAGf,YAAY,0BAA0Ba,OAAO,UAAU;QACrE;MACJ,KAAK,WAAW;QACZE,QAAQ,GAAG,GAAGf,YAAY,0BAA0Ba,OAAO,YAAY;QACvE;MACJ,KAAK,kBAAkB;QACnBE,QAAQ,GAAG,GAAGf,YAAY,0BAA0Ba,OAAO,QAAQ;QACnE;MACJ,KAAK,WAAW;QACZE,QAAQ,GAAG,GAAGf,YAAY,0BAA0Ba,OAAO,SAAS;QACpE;MACJ;QACI,MAAM,IAAIG,KAAK,CAAC,gBAAgB,CAAC;IACzC;IAEA,MAAMb,QAAQ,GAAG,MAAMJ,KAAK,CAACkB,GAAG,CAC5BF,QAAQ,EACR,CAAC,CAAC,EACF;MACIV,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,eAAe,EAAE;IACrB,CACJ,CAAC;IACD,OAAOH,QAAQ,CAACI,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAU,eAAA,EAAAC,oBAAA;IACZV,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAM,IAAIQ,KAAK,CAAC,EAAAE,eAAA,GAAAV,KAAK,CAACL,QAAQ,cAAAe,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBX,IAAI,cAAAY,oBAAA,uBAApBA,oBAAA,CAAsBR,OAAO,KAAI,+BAA+B,CAAC;EACrF;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}